# Generated by Django 5.2.5 on 2025-08-17 14:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('profile', models.CharField(choices=[('COMUM', 'Comum'), ('AUTOR', 'Autor'), ('ADMIN', 'Administrador')], default='COMUM', max_length=10)),
                ('state', models.CharField(blank=True, max_length=2, verbose_name='UF')),
                ('avatar_url', models.URLField(blank=True, verbose_name='URL do Avatar')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('SEGUIDOR', 'Novo seguidor'), ('COMENTARIO', 'Novo comentário'), ('AVALIACAO', 'Nova avaliação'), ('FAVORITO', 'Receita favoritada')], max_length=10, verbose_name='tipo')),
                ('read', models.BooleanField(default=False, verbose_name='lida')),
                ('data', models.JSONField(blank=True, null=True, verbose_name='dados')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='usuário')),
            ],
            options={
                'verbose_name': 'notificação',
                'verbose_name_plural': 'notificações',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='título')),
                ('difficulty', models.CharField(choices=[('FACIL', 'Fácil'), ('MEDIO', 'Médio'), ('DIFICIL', 'Difícil')], max_length=7, verbose_name='dificuldade')),
                ('prep_time', models.PositiveIntegerField(help_text='Tempo em minutos', verbose_name='tempo de preparo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='usuário')),
            ],
            options={
                'verbose_name': 'receita',
                'verbose_name_plural': 'receitas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PreparationStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(verbose_name='ordem')),
                ('description', models.TextField(verbose_name='descrição')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='api.recipe', verbose_name='receita')),
            ],
            options={
                'verbose_name': 'passo de preparo',
                'verbose_name_plural': 'passos de preparo',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL')),
                ('type', models.CharField(choices=[('IMAGEM', 'Imagem'), ('VIDEO', 'Vídeo')], max_length=6, verbose_name='tipo')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='api.recipe', verbose_name='receita')),
            ],
            options={
                'verbose_name': 'mídia',
                'verbose_name_plural': 'mídias',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nome')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='quantidade')),
                ('measure_unit', models.CharField(blank=True, max_length=50, verbose_name='unidade de medida')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='api.recipe', verbose_name='receita')),
            ],
            options={
                'verbose_name': 'ingrediente',
                'verbose_name_plural': 'ingredientes',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='texto')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='usuário')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.recipe', verbose_name='receita')),
            ],
            options={
                'verbose_name': 'comentário',
                'verbose_name_plural': 'comentários',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('SPAM', 'Spam'), ('CONTEUDO_IMPROPRIO', 'Conteúdo Impróprio'), ('DESRESPEITOSO', 'Desrespeitoso'), ('OUTRO', 'Outro')], max_length=20, verbose_name='motivo')),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('ANALISE', 'Em Análise'), ('RESOLVIDO', 'Resolvido'), ('REJEITADO', 'Rejeitado')], default='PENDENTE', max_length=10, verbose_name='status')),
                ('content_id', models.PositiveIntegerField(verbose_name='ID do conteúdo')),
                ('content_type', models.CharField(choices=[('RECEITA', 'Receita'), ('COMENTARIO', 'Comentário')], max_length=10, verbose_name='tipo de conteúdo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL, verbose_name='usuário')),
            ],
            options={
                'verbose_name': 'denúncia',
                'verbose_name_plural': 'denúncias',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='avaliação')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to=settings.AUTH_USER_MODEL, verbose_name='usuário')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='api.recipe', verbose_name='receita')),
            ],
            options={
                'verbose_name': 'avaliação',
                'verbose_name_plural': 'avaliações',
                'unique_together': {('user', 'recipe')},
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='usuário')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='api.recipe', verbose_name='receita')),
            ],
            options={
                'verbose_name': 'favorito',
                'verbose_name_plural': 'favoritos',
                'unique_together': {('user', 'recipe')},
            },
        ),
    ]
